import { API_BASE_URL } from "../js/api.js";
import { requireAuth } from "../js/api/config.js";
import { comboApi } from "../js/api/comboApi.js";
import { branchApi } from "../js/api/branchApi.js";

const form = document.getElementById("comboForm");
const branchSelect = document.getElementById("branchId");
const imageInput = document.getElementById("imageFile");
const previewImg = document.getElementById("previewImg");
const result = document.getElementById("result");
const btnReset = document.getElementById("btnReset");

// ===== Khi trang load =====
document.addEventListener("DOMContentLoaded", async () => {
    if (!requireAuth()) return;
    await loadBranches();
});

// ===== Load danh s√°ch chi nh√°nh =====
async function loadBranches() {
    try {
        const branches = await branchApi.getNames();
        branchSelect.innerHTML = `<option value="">-- Ch·ªçn chi nh√°nh --</option>`;
        branches.forEach(b => {
            branchSelect.innerHTML += `
                <option value="${b.id || b.branchId}">
                    ${b.name || b.branchName || "Kh√¥ng t√™n"}
                </option>`;
        });
    } catch (err) {
        console.error("‚ùå L·ªói khi t·∫£i chi nh√°nh:", err);
        branchSelect.innerHTML = `<option value="">(Kh√¥ng t·∫£i ƒë∆∞·ª£c chi nh√°nh)</option>`;
    }
}

// ===== Preview ·∫£nh khi ch·ªçn =====
imageInput.addEventListener("change", () => {
    const file = imageInput.files?.[0];
    if (!file) {
        previewImg.style.display = "none";
        return;
    }
    previewImg.src = URL.createObjectURL(file);
    previewImg.style.display = "block";
});

// ===== Submit t·∫°o combo m·ªõi =====
form.addEventListener("submit", async (e) => {
    e.preventDefault();
    result.textContent = "";

    // ‚úÖ L·∫•y v√† ki·ªÉm tra branchId
    const branchIdValue = parseInt(branchSelect.value, 10);
    if (!branchIdValue || isNaN(branchIdValue)) {
        alert("‚ö†Ô∏è Vui l√≤ng ch·ªçn chi nh√°nh h·ª£p l·ªá!");
        return;
    }

    // ‚úÖ Chu·∫©n b·ªã d·ªØ li·ªáu combo
    const rawPrice = document.getElementById("price").value.replace(/\./g, "").replace(/,/g, "");
    const comboData = {
        branchId: branchIdValue,
        nameCombo: document.getElementById("nameCombo").value.trim(),
        price: parseFloat(rawPrice),
        descriptionCombo: document.getElementById("descriptionCombo").value.trim(),
        items: document.getElementById("items").value.trim(),
        available: document.getElementById("available").checked
    };

    const file = imageInput.files?.[0];

    console.log("üì¶ FormData g·ª≠i ƒëi:", comboData);

    try {
        const response = await comboApi.create(comboData, file);
        if (!response) throw new Error("Kh√¥ng nh·∫≠n ƒë∆∞·ª£c ph·∫£n h·ªìi t·ª´ server.");

        result.textContent = `‚úÖ T·∫°o combo th√†nh c√¥ng: ${response.nameCombo}`;
        setTimeout(() => {
            window.location.href = "listCombo.html";
        }, 1000);
    } catch (err) {
        console.error("‚ùå API create failed:", err);
        result.textContent = "‚ùå L·ªói khi t·∫°o combo!";
    }
});

// ===== Reset form =====
btnReset.addEventListener("click", () => {
    form.reset();
    previewImg.style.display = "none";
    result.textContent = "";
});
