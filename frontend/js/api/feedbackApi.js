// /js/api/branchApi.js
import { API_BASE_URL, getValidToken, handleResponse } from './config.js';

export const feedbackApi = {

    // ðŸ“Œ Láº¥y danh sÃ¡ch feedback cá»§a phim (public)
    async getByMovie(movieId) {
        const url = `${API_BASE_URL}/feedback/movie/${movieId}`;
        const res = await fetch(url, {
            method: "GET",
            headers: { "Content-Type": "application/json" },
        });
        return handleResponse(res);
    },

    // ðŸ“Œ Táº¡o feedback (yÃªu cáº§u login)
    async create(movieId, feedbackData) {
        const token = getValidToken();
        if (!token) throw new Error("Báº¡n cáº§n Ä‘Äƒng nháº­p Ä‘á»ƒ gá»­i Ä‘Ã¡nh giÃ¡!");

        const res = await fetch(`${API_BASE_URL}/feedback/movie/${movieId}`, {
            method: "POST",
            headers: {
                Authorization: `Bearer ${token}`,
                "Content-Type": "application/json",
            },
            body: JSON.stringify(feedbackData),
        });
        return handleResponse(res);
    },

    // ðŸ“Œ Cáº­p nháº­t feedback (yÃªu cáº§u login)
    async update(id, feedbackData) {
        const token = getValidToken();
        if (!token) throw new Error("Báº¡n cáº§n Ä‘Äƒng nháº­p Ä‘á»ƒ chá»‰nh sá»­a Ä‘Ã¡nh giÃ¡!");

        const res = await fetch(`${API_BASE_URL}/feedback/${id}`, {
            method: "PUT",
            headers: {
                Authorization: `Bearer ${token}`,
                "Content-Type": "application/json",
            },
            body: JSON.stringify(feedbackData),
        });
        return handleResponse(res);
    },

    // ðŸ“Œ XÃ³a feedback (yÃªu cáº§u login)
    async delete(id) {
        const token = getValidToken();
        if (!token) throw new Error("Báº¡n cáº§n Ä‘Äƒng nháº­p Ä‘á»ƒ xÃ³a Ä‘Ã¡nh giÃ¡!");

        const res = await fetch(`${API_BASE_URL}/feedback/${id}`, {
            method: "DELETE",
            headers: { Authorization: `Bearer ${token}` },
        });
        return handleResponse(res);
    },
};
