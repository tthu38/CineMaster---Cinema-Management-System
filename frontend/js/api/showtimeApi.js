// /js/api/showtimeApi.js
import { API_BASE_URL, getValidToken, handleResponse } from './config.js';

export const showtimeApi = {

    // ðŸŸ¢ [POST] /api/v1/showtimes â€” Táº¡o má»›i lá»‹ch chiáº¿u
    async create(data) {
        const token = getValidToken();
        if (!token) throw new Error("Thiáº¿u token xÃ¡c thá»±c");
        const res = await fetch(`${API_BASE_URL}/showtimes`, {
            method: 'POST',
            headers: {
                Authorization: `Bearer ${token}`,
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
        });
        return handleResponse(res);
    },

    // ðŸŸ¢ [GET] /api/v1/showtimes/{id} â€” Láº¥y chi tiáº¿t lá»‹ch chiáº¿u
    async getById(id) {
        const token = getValidToken();
        if (!token) throw new Error("Thiáº¿u token xÃ¡c thá»±c");
        const res = await fetch(`${API_BASE_URL}/showtimes/${id}`, {
            method: 'GET',
            headers: {
                Authorization: `Bearer ${token}`,
                'Content-Type': 'application/json',
            },
        });
        return handleResponse(res);
    },

    // ðŸŸ¢ [PUT] /api/v1/showtimes/{id} â€” Cáº­p nháº­t lá»‹ch chiáº¿u
    async update(id, data) {
        const token = getValidToken();
        if (!token) throw new Error("Thiáº¿u token xÃ¡c thá»±c");
        const res = await fetch(`${API_BASE_URL}/showtimes/${id}`, {
            method: 'PUT',
            headers: {
                Authorization: `Bearer ${token}`,
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
        });
        return handleResponse(res);
    },

    // ðŸŸ¢ [DELETE] /api/v1/showtimes/{id} â€” XÃ³a lá»‹ch chiáº¿u
    async remove(id) {
        const token = getValidToken();
        if (!token) throw new Error("Thiáº¿u token xÃ¡c thá»±c");
        const res = await fetch(`${API_BASE_URL}/showtimes/${id}`, {
            method: 'DELETE',
            headers: {
                Authorization: `Bearer ${token}`,
                'Content-Type': 'application/json',
            },
        });
        return handleResponse(res);
    },

    // ðŸŸ¢ [GET] /api/v1/showtimes â€” TÃ¬m kiáº¿m lá»‹ch chiáº¿u (dÃ¹ng trong loadDaySlotsForAuditoriumDay)
    async search(params = {}) {
        const token = getValidToken();
        if (!token) throw new Error("Thiáº¿u token xÃ¡c thá»±c");
        const query = new URLSearchParams(params).toString();
        const res = await fetch(`${API_BASE_URL}/showtimes?${query}`, {
            method: 'GET',
            headers: {
                Authorization: `Bearer ${token}`,
                'Content-Type': 'application/json',
            },
        });
        return handleResponse(res);
    },

    // ðŸŸ¢ [GET] /api/v1/showtimes/week â€” Láº¥y lá»‹ch chiáº¿u tuáº§n hiá»‡n táº¡i
    async getWeek({ anchor = null, branchId = null } = {}) {
        const token = getValidToken();
        const query = new URLSearchParams();
        if (anchor) query.set('anchor', anchor);
        if (branchId) query.set('branchId', branchId);

        const res = await fetch(`${API_BASE_URL}/showtimes/week?${query.toString()}`, {
            method: 'GET',
            headers: {
                Authorization: `Bearer ${token}`,
                'Content-Type': 'application/json',
            },
        });
        return handleResponse(res);
    },

    // ðŸŸ¢ [GET] /api/v1/showtimes/next-week â€” Láº¥y lá»‹ch chiáº¿u tuáº§n káº¿
    async getNextWeek(branchId = null) {
        const token = getValidToken();
        const url = `${API_BASE_URL}/showtimes/next-week${branchId ? `?branchId=${branchId}` : ''}`;
        const res = await fetch(url, {
            method: 'GET',
            headers: {
                Authorization: `Bearer ${token}`,
                'Content-Type': 'application/json',
            },
        });
        return handleResponse(res);
    },
};
